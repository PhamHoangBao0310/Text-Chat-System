/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import dtos.UserDTO;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.List;
import javax.swing.DefaultListModel;
import models.MessageDAO;
import models.UserDAO;

/**
 *
 * @author DELL
 */
public class ChattingForm extends javax.swing.JFrame {

    /**
     * Creates new form ListOfUSer
     */
    UserDTO user;
    ObjectOutputStream oos;
    ObjectInputStream ois;
    Socket client;

    public ChattingForm() {
        initComponents();
        this.setTitle("Chatting");
    }

    public ChattingForm(UserDTO user) {
        initComponents();
        this.user = user;
        this.setTitle("Chatting");
        txtUserName.setText(user.getUsername());

        String host = "192.168.101.1";
        int port = 1333;
        List<UserDTO> list = null;
        UserDAO dao = new UserDAO();
        List<UserDTO> listUreadUser = null;
        List<Integer> listUnreadUserID = null;
        MessageDAO messDao = new MessageDAO();
        try {
//            Add all current user who online or offline
            list = dao.getAllUser(user.getId());
            DefaultListModel<UserDTO> listModel = new DefaultListModel<>();
            for (UserDTO listUser : list) {
                listModel.addElement(listUser);
            }
            this.listUser.setModel(listModel);
            
//            Add all current user who have mess the user unread
            listUnreadUserID = messDao.getlistUnreadUserId(user.getId());
            listUreadUser = dao.getUser(listUnreadUserID);
            DefaultListModel<UserDTO> listUnreadModel = new DefaultListModel<>();
            for(UserDTO listUser : listUreadUser){
                listUnreadModel.addElement(listUser);
            }
            this.listUnreadUser.setModel(listUnreadModel);
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        try {

            client = new Socket(host, port);
            System.out.println("Connected to server now");
            System.out.println("My name is : " + client);
            System.out.println(user.toString() + "-" + client.getPort() + "-" + client.getLocalPort());

            oos = new ObjectOutputStream(client.getOutputStream());
            oos.writeObject(user);
            oos.flush();

            ois = new ObjectInputStream(client.getInputStream());
            OutputText ouputText = new OutputText(client, tabbedPaneChat, ois, user, oos);
            ouputText.start();

        } catch (Exception e) {
            e.printStackTrace();
        }
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                try {
                    dao.setStatus(0, user.getId());
                } catch (Exception ex) {
                    ex.printStackTrace();
                } finally {
                    System.out.println("Closing socket");
                    try {
                        oos.close();
                        ois.close();
                        System.out.println(client.toString());

                        client.close();
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listUser = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnChat = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        tabbedPaneChat = new javax.swing.JTabbedPane();
        btnRefresh = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listUnreadUser = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        btnRefreshUnread = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(listUser);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Login as");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Registered Users :");

        btnChat.setText("Chat");
        btnChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChatActionPerformed(evt);
            }
        });

        btnClose.setText("Close");

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(listUnreadUser);

        jLabel3.setText("Unread Message");

        btnRefreshUnread.setText("Refresh");
        btnRefreshUnread.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshUnreadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefresh))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnChat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClose)
                        .addGap(35, 35, 35)))
                .addGap(18, 18, 18)
                .addComponent(tabbedPaneChat, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefreshUnread))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(btnRefresh))
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 27, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnChat)
                            .addComponent(btnClose)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tabbedPaneChat)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(btnRefreshUnread)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        List<UserDTO> list = null;
        UserDAO dao = new UserDAO();
        try {
            list = dao.getAllUser(user.getId());
            DefaultListModel<UserDTO> listModel = new DefaultListModel<>();
            for (UserDTO listUser : list) {
                listModel.addElement(listUser);
            }
            this.listUser.setModel(listModel);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChatActionPerformed
        // TODO add your handling code here:
        UserDTO chosenUser = listUser.getSelectedValue();
        System.out.println("chat " + chosenUser);
        if (chosenUser == null) {
            return;
        }
        if (client == null) {
            return;
        }
        if (client.isClosed()) {
            return;
        }
        ChatPanel panel = new ChatPanel(client, user, chosenUser, oos, ois);
        this.tabbedPaneChat.add(chosenUser.getLoginName(), panel);
        MessageDAO messDao = new MessageDAO();
        try {
            String currmess = messDao.getMessage(user.getId(), chosenUser.getId());
            panel.getTxtMess().append(currmess);
        } catch (Exception e) {
            e.printStackTrace();
        }

//        for (int i = 0; i < tabbedPaneChat.getTabCount(); i++) {
//            System.out.println("Title: " + tabbedPaneChat.getTitleAt(i));
//        }
    }//GEN-LAST:event_btnChatActionPerformed

    private void btnRefreshUnreadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshUnreadActionPerformed
        // TODO add your handling code here:
        UserDAO dao = new UserDAO();
        List<UserDTO> listUreadUser = null;
        List<Integer> listUnreadUserID = null;
        MessageDAO messDao = new MessageDAO();
         try {
            listUnreadUserID = messDao.getlistUnreadUserId(user.getId());
            listUreadUser = dao.getUser(listUnreadUserID);
            DefaultListModel<UserDTO> listUnreadModel = new DefaultListModel<>();
            for(UserDTO listUser : listUreadUser){
                listUnreadModel.addElement(listUser);
            }
            this.listUnreadUser.setModel(listUnreadModel);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnRefreshUnreadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChattingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChattingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChattingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChattingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChattingForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChat;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnRefreshUnread;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<UserDTO> listUnreadUser;
    private javax.swing.JList<UserDTO> listUser;
    private javax.swing.JTabbedPane tabbedPaneChat;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
