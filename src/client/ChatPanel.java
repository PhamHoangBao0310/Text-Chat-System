/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import dtos.UserDTO;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import javax.swing.JTextArea;
import models.MessageDAO;
import models.UserDAO;
import server.Message;

/**
 *
 * @author DELL
 */
public class ChatPanel extends javax.swing.JPanel {

    Socket s;
    UserDTO sender;
    UserDTO receiver;
    ObjectOutputStream oos;
    ObjectInputStream ois;

    /**
     * Creates new form ChatPanel
     */
    public ChatPanel() {
        initComponents();
    }

    public ChatPanel(Socket s, UserDTO sender, UserDTO receiver, ObjectOutputStream oos, ObjectInputStream ois) {
        initComponents();
        this.s = s;
        this.sender = sender;
        this.receiver = receiver;
        this.oos = oos;
        this.ois = ois;

        try {
            MessageDAO messDao = new MessageDAO();
            messDao.setDefaultUnread(receiver.getId(), sender.getId());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public JTextArea getTxtMess() {
        return txtMess;
    }

    public UserDTO getSender() {
        return sender;
    }

    public UserDTO getReceiver() {
        return receiver;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtMess = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSendMess = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        txtMess.setColumns(20);
        txtMess.setRows(5);
        jScrollPane1.setViewportView(txtMess);

        txtSendMess.setColumns(20);
        txtSendMess.setRows(5);
        jScrollPane2.setViewportView(txtSendMess);

        btnSend.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Message :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 47, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        String sendMessage = txtSendMess.getText().trim();
        if (sendMessage.equals("")) {
            return;
        }
        try {
//            Create new message obj
            Message sendMessageObj = new Message(sendMessage, receiver, sender);
            oos.writeObject(sendMessageObj);
            oos.flush();
//            Change current view by adding new message
            txtMess.append("\n" + sender.getLoginName() + " : " + sendMessage);
            txtSendMess.setText("");
            UserDAO userDao = new UserDAO();
            int isActive = userDao.getStatus(receiver.getId());
            MessageDAO messDao = new MessageDAO();
//            Save message from sender(you) to receiver 
            messDao.saveMessage(sender.getId(), receiver.getId(), txtMess.getText());
            if (isActive == 0) {
                messDao.addMoreUnread(sender.getId(), receiver.getId());
                messDao.saveMessage(receiver.getId(), sender.getId(), txtMess.getText());
            } // Check if receiver is offline
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSendActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtMess;
    private javax.swing.JTextArea txtSendMess;
    // End of variables declaration//GEN-END:variables
}













//              try{
////            Create new message obj
//            Message sendMessageObj = new Message(sendMessage, receiver, sender);
//            oos.writeObject(sendMessageObj);
//            oos.flush();
////            Change current view by adding new message
//            txtMess.append("\n" + sender.getLoginName() + " : " + sendMessage);
//            txtSendMess.setText("");
//            UserDAO userDao = new UserDAO();
//            int isActive = userDao.getStatus(receiver.getId());
//            MessageDAO messDao = new MessageDAO();
////            Save message from sender(you) to receiver 
//            messDao.saveMessage(sender.getId(), receiver.getId(), txtMess.getText());
//            if (isActive == 0) {
//                messDao.addMoreUnread(sender.getId(), receiver.getId());
//                messDao.saveMessage(receiver.getId(), sender.getId(), txtMess.getText());
//            } // Check if receiver is offline
//        } catch (Exception e) {
//            e.printStackTrace();
//        }